const Offer = require('../models/Offer');
const Auction = require('../models/Auction');
const User = require('../models/User');
const { Lot } = require('../models');

exports.createOffer = async (createOffer, user_id) => {
  try {
    const { lot_id, percent } = createOffer;

    // –ü—Ä–æ–≤–µ—Ä–∫–∞: –∞—É–∫—Ü–∏–æ–Ω —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏ –æ—Ç–∫—Ä—ã—Ç
    const lot = await Lot.findByPk(lot_id);
    if (!lot || lot.status !== 'open') {
      throw new Error(JSON.stringify({ message: '–õ–æ—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω' }));
    }
    const isOffer = await Offer.findOne({ where: { lot_id, user_id } });
    if (isOffer) throw new Error(JSON.stringify({ message: '–í—ã —É–∂–µ –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –∑–∞—è–≤–∫—É –Ω–∞ —ç—Ç–æ—Ç –ª–æ—Ç' }));

    const offer = await Offer.create({
      lot_id,
      user_id,
      percent,
    });

    return offer
  } catch (error) {
    throw new Error(JSON.stringify({ message: '–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è', error: error.message }));
  }
};

exports.getOffersByAuction = async (req, res) => {
  try {
    const { auctionId } = req.params;

    const offers = await Offer.findAll({
      where: { auction_id: auctionId },
      order: [['percent', 'DESC']], // —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç—É
      include: [{
        model: User,
        as: 'user', // üëà –¥–æ–ª–∂–µ–Ω —Å–æ–≤–ø–∞–¥–∞—Ç—å —Å –∞—Å—Å–æ—Ü–∏–∞—Ü–∏–µ–π –≤—ã—à–µ
        attributes: ['id', 'name', 'email']
      }]
    });

    res.json(offers);
  } catch (error) {
    console.error(error);
    res.status(500).json({ message: '–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –æ—Ñ—Ñ–µ—Ä–æ–≤', error: error.message });
  }
};

